"use strict";(self.webpackChunklearn_python=self.webpackChunklearn_python||[]).push([[154],{9368:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=s(4848),t=s(8453);const r={sidebar_position:6},l="Strings",c={id:"python-basics/stings",title:"Strings",description:"Definition of a String",source:"@site/docs/python-basics/stings.md",sourceDirName:"python-basics",slug:"/python-basics/stings",permalink:"/docs/python-basics/stings",draft:!1,unlisted:!1,editUrl:"https://github.com/computenepal/learn-html/tree/master/docs/python-basics/stings.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Numeric Representation",permalink:"/docs/python-basics/numeric-representation"}},a={},d=[{value:"Definition of a String",id:"definition-of-a-string",level:2},{value:"Creating Strings",id:"creating-strings",level:2},{value:"Multi-line Strings",id:"multi-line-strings",level:2},{value:"String Concatenation",id:"string-concatenation",level:2},{value:"String Length",id:"string-length",level:2},{value:"String Repetition",id:"string-repetition",level:2},{value:"String Methods",id:"string-methods",level:2},{value:"Whitespace Removal",id:"whitespace-removal",level:2},{value:"Replacing Substrings",id:"replacing-substrings",level:2},{value:"Finding Substrings",id:"finding-substrings",level:2},{value:"Accessing Characters in a String",id:"accessing-characters-in-a-string",level:2},{value:"Comments and Disabling Code",id:"comments-and-disabling-code",level:2},{value:"String Slicing",id:"string-slicing",level:2}];function o(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"strings",children:"Strings"})}),"\n",(0,i.jsx)(e.h2,{id:"definition-of-a-string",children:"Definition of a String"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["A ",(0,i.jsx)(e.strong,{children:"string"})," is a sequence of characters, essentially text data. In Python, a string is represented by enclosing characters within either ",(0,i.jsx)(e.strong,{children:"single"})," (",(0,i.jsx)(e.code,{children:"'"}),") or ",(0,i.jsx)(e.strong,{children:"double quotes"})," (",(0,i.jsx)(e.code,{children:'"'}),")."]}),"\n",(0,i.jsxs)(e.li,{children:["Example:","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:"name = \"John\"\ngreeting = 'Hello, world!'\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"creating-strings",children:"Creating Strings"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Strings can be assigned to variables:","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'city = "San Francisco"\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Double vs. Single Quotes"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"You can use both single or double quotes to create strings."}),"\n",(0,i.jsx)(e.li,{children:"The opening and closing quotes must match."}),"\n",(0,i.jsxs)(e.li,{children:["Example:","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:"sentence = 'It\\'s a sunny day'\n# Alternatively, using double quotes avoids the need to escape the single quote:\nsentence = \"It's a sunny day\"\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"multi-line-strings",children:"Multi-line Strings"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["For ",(0,i.jsx)(e.strong,{children:"multi-line strings"}),", use ",(0,i.jsx)(e.strong,{children:"triple quotes"})," (",(0,i.jsx)(e.code,{children:"'''"})," or ",(0,i.jsx)(e.code,{children:'"""'}),")."]}),"\n",(0,i.jsxs)(e.li,{children:["Example:","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'address = """123 Elm Street\nSpringfield\nUSA"""\n'})}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"This allows the string to span multiple lines."}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"string-concatenation",children:"String Concatenation"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["You can ",(0,i.jsx)(e.strong,{children:"concatenate"})," (join) strings using the ",(0,i.jsxs)(e.strong,{children:[(0,i.jsx)(e.code,{children:"+"})," operator"]}),":","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'full_name = "John" + " " + "Doe"\n# Output: "John Doe"\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Note that ",(0,i.jsx)(e.strong,{children:"spaces"})," between words must be explicitly added, as shown."]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"string-length",children:"String Length"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Use the ",(0,i.jsxs)(e.strong,{children:[(0,i.jsx)(e.code,{children:"len()"})," function"]})," to get the length of a string:","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'length = len(full_name)\nprint("Length of the full name:", length)\n# Output: 8\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"string-repetition",children:"String Repetition"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["You can ",(0,i.jsx)(e.strong,{children:"repeat"})," a string using the ",(0,i.jsx)(e.code,{children:"*"})," operator:","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'dash_line = "-" * 5\n# Output: "-----"\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"string-methods",children:"String Methods"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"upper()"})}),": Converts all characters to uppercase.","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'greeting = "hello"\nprint(greeting.upper())  # Output: "HELLO"\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"lower()"})}),": Converts all characters to lowercase.","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'print(greeting.lower())  # Output: "hello"\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"title()"})}),": Converts the first character of each word to uppercase.","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'title_greeting = "welcome to python"\nprint(title_greeting.title())  # Output: "Welcome To Python"\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"whitespace-removal",children:"Whitespace Removal"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"strip()"})}),": Removes leading and trailing whitespace.","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'spaced_string = "  Hello  "\nprint(spaced_string.strip())  # Output: "Hello"\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"lstrip()"})}),": Removes leading whitespace only."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"rstrip()"})}),": Removes trailing whitespace only."]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"replacing-substrings",children:"Replacing Substrings"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"replace(old, new)"})}),": Replaces all occurrences of ",(0,i.jsx)(e.code,{children:"old"})," with ",(0,i.jsx)(e.code,{children:"new"})," in the string.","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'text = "I like apples"\nnew_text = text.replace("apples", "bananas")\nprint(new_text)  # Output: "I like bananas"\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"finding-substrings",children:"Finding Substrings"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"count(sub)"})}),": Counts how many times a substring appears in the string.","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'phrase = "banana"\nprint(phrase.count("a"))  # Output: 3\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"find(sub)"})}),": Returns the index of the first occurrence of the substring. If not found, returns ",(0,i.jsx)(e.code,{children:"-1"}),".","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'print(phrase.find("na"))  # Output: 2\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"accessing-characters-in-a-string",children:"Accessing Characters in a String"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["You can ",(0,i.jsx)(e.strong,{children:"access individual characters"})," in a string using ",(0,i.jsx)(e.strong,{children:"indexing"})," with square brackets."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsxs)(e.strong,{children:["Index starts at ",(0,i.jsx)(e.code,{children:"0"})]})," (first character):","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:"first_char = phrase[0]  # Output: 'b'\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Negative indexing"})," starts from the end:","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:"last_char = phrase[-1]  # Output: 'a'\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"comments-and-disabling-code",children:"Comments and Disabling Code"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Use the ",(0,i.jsxs)(e.strong,{children:[(0,i.jsx)(e.code,{children:"#"})," symbol"]})," to add comments to your code."]}),"\n",(0,i.jsxs)(e.li,{children:["Example:","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'# This is a comment\nprint("Hello, World!")  # This line prints a greeting\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["You can ",(0,i.jsx)(e.strong,{children:"comment out lines of code"})," to prevent them from executing, especially useful during debugging:","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'# print("This line won\'t run")\nprint("This line will run")\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"string-slicing",children:"String Slicing"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["You can extract ",(0,i.jsx)(e.strong,{children:"substrings"})," using slicing syntax ",(0,i.jsx)(e.code,{children:"[start:end]"}),":","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:'title="strings.py"',children:'text = "Python programming"\nsub_text = text[0:6]  # Output: "Python"\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"start"})})," is inclusive, ",(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"end"})})," is exclusive."]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"This overview gives a foundational understanding of working with strings in Python, covering creating, manipulating, and accessing string data effectively."})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(o,{...n})}):o(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>c});var i=s(6540);const t={},r=i.createContext(t);function l(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);