"use strict";(self.webpackChunklearn_python=self.webpackChunklearn_python||[]).push([[456],{3829:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>d});var i=s(4848),r=s(8453);const t={sidebar_position:5},l="Numeric Representation",c={id:"python-basics/numeric-representation",title:"Numeric Representation",description:"Python supports different ways of representing numbers, including integer and real (floating point) numbers.",source:"@site/docs/python-basics/numeric-representation.md",sourceDirName:"python-basics",slug:"/python-basics/numeric-representation",permalink:"/docs/python-basics/numeric-representation",draft:!1,unlisted:!1,editUrl:"https://github.com/computenepal/learn-html/tree/master/docs/python-basics/numeric-representation.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Print Function",permalink:"/docs/python-basics/print-function"},next:{title:"Strings",permalink:"/docs/python-basics/stings"}},o={},d=[{value:"Integer Types (int)",id:"integer-types-int",level:2},{value:"Conversion between Notations",id:"conversion-between-notations",level:3},{value:"Integer Variables in Different Notations",id:"integer-variables-in-different-notations",level:3},{value:"Floating-Point Numbers (float)",id:"floating-point-numbers-float",level:2},{value:"Precision Issues with Floating-Point Numbers",id:"precision-issues-with-floating-point-numbers",level:3},{value:"Addressing Precision Issues",id:"addressing-precision-issues",level:3},{value:"Practical Examples",id:"practical-examples",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"numeric-representation",children:"Numeric Representation"})}),"\n",(0,i.jsx)(n.p,{children:"Python supports different ways of representing numbers, including integer and real (floating point) numbers."}),"\n",(0,i.jsx)(n.h2,{id:"integer-types-int",children:"Integer Types (int)"}),"\n",(0,i.jsx)(n.p,{children:"Integers in Python can be represented in various numerical systems:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Decimal Notation (Base 10):"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["This is the default way we represent numbers, such as ",(0,i.jsx)(n.code,{children:"3"})," or ",(0,i.jsx)(n.code,{children:"-89"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Binary Notation (Base 2):"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Represented using a prefix of ",(0,i.jsx)(n.code,{children:"0b"}),". It consists only of ",(0,i.jsx)(n.code,{children:"0"})," and ",(0,i.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:"0b1011"})," is equivalent to ",(0,i.jsx)(n.code,{children:"11"})," in decimal."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Octal Notation (Base 8):"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Represented using a prefix of ",(0,i.jsx)(n.code,{children:"0o"}),". It uses digits from ",(0,i.jsx)(n.code,{children:"0"})," to ",(0,i.jsx)(n.code,{children:"7"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:"0o12"})," is equivalent to ",(0,i.jsx)(n.code,{children:"10"})," in decimal."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Hexadecimal Notation (Base 16):"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Represented using a prefix of ",(0,i.jsx)(n.code,{children:"0x"}),". It uses digits from ",(0,i.jsx)(n.code,{children:"0"})," to ",(0,i.jsx)(n.code,{children:"9"})," and letters ",(0,i.jsx)(n.code,{children:"A"})," to ",(0,i.jsx)(n.code,{children:"F"})," to represent values ",(0,i.jsx)(n.code,{children:"10"})," to ",(0,i.jsx)(n.code,{children:"15"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:"0x2B"})," is equivalent to ",(0,i.jsx)(n.code,{children:"43"})," in decimal."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"conversion-between-notations",children:"Conversion between Notations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["To ",(0,i.jsx)(n.strong,{children:"convert binary to decimal"}),", sum each digit multiplied by ",(0,i.jsx)(n.code,{children:"2"})," raised to the power of its position, starting from ",(0,i.jsx)(n.code,{children:"0"})," on the right."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:"0b1011"})," in decimal is calculated as:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"( 1 \\times 2^3 + 0 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0 = 8 + 0 + 2 + 1 = 11 )"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["To ",(0,i.jsx)(n.strong,{children:"convert octal to decimal"}),", use powers of ",(0,i.jsx)(n.code,{children:"8"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:"0o52"})," in decimal is calculated as:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"( 5 \\times 8^1 + 2 \\times 8^0 = 40 + 2 = 42 )"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["To ",(0,i.jsx)(n.strong,{children:"convert hexadecimal to decimal"}),", use powers of ",(0,i.jsx)(n.code,{children:"16"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:"0x2B"})," in decimal is calculated as:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"( 2 \\times 16^1 + 11 \\times 16^0 = 32 + 11 = 43 )"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Python can perform these conversions using built-in functions:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bin(value)"})," returns the binary representation as a string."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"oct(value)"})," returns the octal representation as a string."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hex(value)"})," returns the hexadecimal representation as a string."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To ",(0,i.jsx)(n.strong,{children:"convert a string representation"})," back to an integer, use the ",(0,i.jsx)(n.code,{children:"int()"})," function."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:'int("0b1011", 2)'})," converts the binary string to decimal."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"integer-variables-in-different-notations",children:"Integer Variables in Different Notations"}),"\n",(0,i.jsx)(n.p,{children:"When working with different notations, Python internally treats the value as an integer regardless of how it is expressed."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Example:","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="numbers.py"',children:"a = 10\nb = 0b1010\nc = 0o12\nd = 0xA\nprint(a, b, c, d)  # Outputs: 10 10 10 10\n"})}),"\n","All four variables have the same value, ",(0,i.jsx)(n.code,{children:"10"}),", but are written in different notations."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"floating-point-numbers-float",children:"Floating-Point Numbers (float)"}),"\n",(0,i.jsx)(n.p,{children:"Floating-point numbers represent real numbers and can have a fractional part."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Standard Notation:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Examples: ",(0,i.jsx)(n.code,{children:"3.0"}),", ",(0,i.jsx)(n.code,{children:"-89.14"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Scientific Notation:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Represented using ",(0,i.jsx)(n.code,{children:"e"})," or ",(0,i.jsx)(n.code,{children:"E"})," to indicate powers of ",(0,i.jsx)(n.code,{children:"10"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:"1.5e3"})," is equivalent to ( 1.5 \\times 10^3 = 1500 )."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"precision-issues-with-floating-point-numbers",children:"Precision Issues with Floating-Point Numbers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Floating-point numbers may have ",(0,i.jsx)(n.strong,{children:"precision issues"})," because they cannot precisely represent all real numbers due to limitations in memory representation."]}),"\n",(0,i.jsxs)(n.li,{children:["Example:","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="numbers.py"',children:'a = 0.1\nb = 0.2\nsum = a + b\nprint("The sum is", sum)  # Outputs: The sum is 0.30000000000000004\n'})}),"\n","Instead of ",(0,i.jsx)(n.code,{children:"0.3"}),", Python returns a value close to ",(0,i.jsx)(n.code,{children:"0.3"})," due to rounding errors in binary representation."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"addressing-precision-issues",children:"Addressing Precision Issues"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["For cases where precision is critical (e.g., financial calculations), Python provides the ",(0,i.jsx)(n.code,{children:"decimal"})," module, which offers more accurate representation and operations. This module is beyond the scope of the video."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"practical-examples",children:"Practical Examples"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Printing Variables in Different Notations:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="numbers.py"',children:"a = 10\nb = 0b1010\nc = 0o12\nd = 0xA\nprint(bin(a), oct(b), hex(c), hex(d))  # Outputs: 0b1010 0o12 0xa 0xa\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This example prints the binary, octal, and hexadecimal representations of the value ",(0,i.jsx)(n.code,{children:"10"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Floating-Point Precision Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="numbers.py"',children:'a = 0.1\nb = 0.2\nsum = a + b\nprint(f"The sum is approximately: {sum:.2f}")  # Outputs: The sum is approximately: 0.30\n'})}),"\n",(0,i.jsxs)(n.p,{children:["By formatting the output, we can display the sum as ",(0,i.jsx)(n.code,{children:"0.30"}),", but the underlying value still contains precision errors."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);